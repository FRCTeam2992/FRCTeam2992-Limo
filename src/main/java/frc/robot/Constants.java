// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot;

/**
 * The Constants class provides a convenient place for teams to hold robot-wide
 * numerical or boolean
 * constants. This class should not be used for any other purpose. All constants
 * should be
 * declared globally (i.e. public static). Do not put anything functional in
 * this class.
 *
 * <p>
 * It is advised to statically import this class (or one of its inner classes)
 * wherever the
 * constants are needed, to reduce verbosity.
 */
public class Constants {

    // Shooter Constants
    public static final int defaultMainShooterSpeed = 2300;
    public static final int defaultSecondaryShooterSpeed = 1700;
    public static final int shooterEncoderPulses = 2048;

    // Drive Variables
    public static final boolean isFieldCentric = true;
    public static final boolean isVelocityControlled = false;
    public static final boolean isGyroCorrected = true;
    public static final double joystickDeadband = 0.1;
    public static double joystickXYSmoothFactor = 0.5;
    public static double joystickRotationSmoothFactor = 0.5;
    public static double joystickRotationInverseDeadband = 0.14;

    // Length and Width of the Robot in Meters (Inches: 22.0 x 24.5)
    // TODO Set these properly for minibot chassis
    public static final double swerveWidth = 0.5588;
    public static final double swerveLength = 0.6223;

    // Max Swerve Speed (Velocity Control)
    public static final double swerveMaxSpeed = 5.0; // (Meters per Second)

    // Swerve Wheels and Gear Ratio
    public static final double driveGearRatio = (50.0 / 14.0) * (16.0 / 28.0) * (45.0 / 15.0);
    public static final double driveWheelDiameter = 0.1016;

    // Analog Encoder Offsets (Degrees) - Opposite of Raw Reading - Bevel Gear to
    // Right
    public static final double frontLeftOffset = -84.1;
    public static final double frontRightOffset = 145.2;
    public static final double rearLeftOffset = -101.7;
    public static final double rearRightOffset = 86.2;

    // Swerve Drive PID (Velocity Control)
    public static final double driveP = 0.15;
    public static final double driveI = 0.0;
    public static final double driveD = 0.0;
    public static final double driveF = 0.05;

    // Swerve Turn PID
    public static final double turnP = 0.008;
    public static final double turnI = 0.0;
    public static final double turnD = 0.00005;
}
